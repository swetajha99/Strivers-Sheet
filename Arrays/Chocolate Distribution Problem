





Given an array A[ ] of positive integers of size N, where each value represents the number of chocolates in a packet. Each packet can have a variable number of chocolates. There are M students, the task is to distribute chocolate packets among M students such that :
1. Each student gets exactly one packet.
2. The difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student is minimum.

Example 1:

Input:
N = 8, M = 5
A = {3, 4, 1, 9, 56, 7, 9, 12}
Output: 6
Explanation: The minimum difference between 
maximum chocolates and minimum chocolates 
is 9 - 3 = 6 by choosing following M packets :
{3, 4, 9, 7, 9}.




class Solution
{
    public long findMinDiff (ArrayList<Long> a, long n, long m)
    {
        // your code here
        long ans = Long.MAX_VALUE;
        long maxw = Long.MIN_VALUE;
        long minw = Long.MAX_VALUE;
        
        Collections.sort(a);
        
       for(long i=0;i<=(n-m);i++){
           minw = a.get((int)i);
           maxw = a.get((int)(m+i-1));
           ans = Math.min(ans, maxw-minw);
       }
       
       return ans;
    }
}
