class MyHashSet {
    int numBucket = 15000;
    List<Integer>[] bucket;
    int hashFunc(int key){
        return key%numBucket;
    }
    public MyHashSet() {
        bucket = new LinkedList[numBucket];
    }
    
    public void add(int key) {
        int i = hashFunc(key);
        if(bucket[i]==null){
            bucket[i] = new LinkedList<>();
        }
        if(bucket[i].indexOf(key)==-1){
            bucket[i].add(key);
        }
    }
    
    public void remove(int key) {
           int i = hashFunc(key);
        if(bucket[i]==null){
            bucket[i] = new LinkedList<>();
        }
        if(bucket[i].indexOf(key)!=-1){
            bucket[i].remove(bucket[i].indexOf(key));
        } 
    }
    
    public boolean contains(int key) {
        int i = hashFunc(key);
        if(bucket[i]==null || bucket[i].indexOf(key)==-1){
            return false;
        }
        return true;
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */
