class Solution
{
    //Function to sort the given linked list using Merge Sort.
    static Node mergeSort(Node head)
    {
        // add your code here
        if(head.next==null){
            return head;
        }
        Node mid = findMid(head);
        Node head2 = mid.next;
        mid.next = null;
        Node newHead = mergeSort(head);
        Node newHead2 = mergeSort(head2);
        Node finalHead =  merge(newHead, newHead2);
        return finalHead;
    }
    public static Node findMid(Node head){
        Node fast = head;
        Node slow = head;
        while(fast.next!=null && fast.next.next!=null){
            fast = fast.next.next;
            slow = slow.next;
        }
        return slow;
    }
    public static Node merge(Node head, Node head2){
        Node list = new Node(0);
        Node handler = list;
        
        while(head!=null && head2!=null){
            if(head.data<head2.data){
                handler.next = head;
                head = head.next;
            }
            else{
                handler.next = head2;
                head2 = head2.next;
            }
            handler = handler.next;
        }
        while(head!=null){
            handler.next = head;
            head = head.next;
            handler = handler.next;
        }
        while(head2!=null){
            handler.next = head2;
            head2 = head2.next;
            handler = handler.next;
        }
        return list.next;
    }
}
